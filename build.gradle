plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
        selenideVersion = "6.19.1",
                junitVersion = "5.10.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            'org.slf4j:slf4j-simple:2.0.7',
            'com.github.javafaker:javafaker:1.0.2',
            'io.qameta.allure:allure-selenide:2.25.0'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task super_test(type: Test) {
    useJUnitPlatform {
        includeTags("super")
    }

}

task simple_test(type: Test) {
    useJUnitPlatform{
        includeTags("simple")
    }
}